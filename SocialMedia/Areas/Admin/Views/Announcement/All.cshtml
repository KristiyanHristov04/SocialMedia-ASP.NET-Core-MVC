@using SocialMedia.Areas.Admin.ViewModels.Announcement
@model IEnumerable<AnnouncementViewModel>
@inject IAdminChatService adminChatService

@{
    ViewData["Title"] = "All Announcements";
    string currentAdminUsername = string.Empty;
    @if (this.User.Identity?.IsAuthenticated ?? false)
    {
        currentAdminUsername = this.User.GetUsername();
    }
    List<AdminMessageViewModel> messages = await adminChatService.LoadMessagesFromDatabaseAsync();
}

<div class="text-white">
    <h1 class="display-4 text-center">@ViewData["Title"]</h1>
    @if ((this.User.Identity?.IsAuthenticated ?? false) && !this.User.IsInRole("User"))
    {
        <div class="text-center">
            <a asp-controller="Announcement" asp-action="Create" id="announcement-button" class="btn btn-primary">Create Announcement</a>
        </div>
    }

    <div id="announcements">
        @foreach (var announcement in Model)
        {
            <div class="announcement">
                @if (announcement.UserUsername != null)
                {
                    <h4 class="">@announcement.Title - (@@@announcement.UserUsername @announcement.PublishDate)</h4>
                }
                else
                {
                    <h4 class="">@announcement.Title - (@announcement.PublishDate)</h4>
                }

                <p>@announcement.Description</p>
                @if ((this.User.Identity?.IsAuthenticated ?? false) && !this.User.IsInRole("User"))
                {
                    <a class="edit-button" asp-controller="Announcement" asp-action="Edit" asp-route-id="@announcement.Id"><i class="fa-regular fa-pen-to-square"></i></a>
                    <a class="delete-button" asp-controller="Announcement" asp-action="Delete" asp-route-id="@announcement.Id"><i class="fa-regular fa-trash-can"></i></a>
                }
            </div>
        }
    </div>
</div>

@if ((this.User.Identity?.IsAuthenticated ?? false) && !this.User.IsInRole("User"))
{
    <partial name="_ChatPartial" model="@messages" />
}


@section Scripts {
    @if (TempData["SuccessEdit"] != null)
    {
        <script>
            toastr.options = {
                positionClass: "toast-bottom-right"
            };

            toastr.success('@TempData["SuccessEdit"]');
        </script>
    }
    @if (TempData["SuccessDelete"] != null)
    {
        <script>
            toastr.options = {
                positionClass: "toast-bottom-right"
            };

            toastr.success('@TempData["SuccessDelete"]');
        </script>
    }
    @if ((this.User.Identity?.IsAuthenticated ?? false) && !this.User.IsInRole("User"))
    {
        <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
        <script src="~/js/admin-chat.js"></script>
        <script>
            let currentAdminUsername = '@@@currentAdminUsername';

            var connection = new signalR.HubConnectionBuilder().withUrl("/adminChatHub").build();

            document.getElementById("send-button").disabled = true;

            connection.on("ReceiveMessage", function (user, message) {
                var li = document.createElement("li");
                document.getElementById("messages-list").appendChild(li);

                let span = document.createElement('span');
                span.classList.add('new-message');
                span.textContent = '*NEW';

                li.appendChild(span);
                li.innerHTML += `${user}: ${message}`;
            });

            connection.start().then(function () {
                document.getElementById("send-button").disabled = false;
            }).catch(function (err) {
                return console.error(err.toString());
            });

            document.getElementById("send-button").addEventListener("click", function (event) {
                var message = document.getElementById("message-input").value;
                if (message.length > 0) {
                    document.getElementById("message-input").value = '';
                    connection.invoke("SendMessage", currentAdminUsername, message).catch(function (err) {
                        return console.error(err.toString());
                    });
                    event.preventDefault();
                }
            });
        </script>
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/announcement-all.css" />
    @if ((this.User.Identity?.IsAuthenticated ?? false) && !this.User.IsInRole("User"))
    {
        <link rel="stylesheet" href="~/css/admin-chat.css" />
    }
}