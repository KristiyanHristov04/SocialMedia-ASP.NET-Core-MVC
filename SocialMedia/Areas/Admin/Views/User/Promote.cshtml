@using SocialMedia.Areas.Admin.ViewModels.User
@model UserViewModel
@inject IAdminChatService adminChatService

@{
    ViewData["Title"] = "Promote To Admin";
    bool isEligibleForPromote = (bool)ViewData["IsEligible"]!;
    string currentAdminUsername = this.User.GetUsername();
    List<AdminMessageViewModel> messages = await adminChatService.LoadMessagesFromDatabaseAsync();
}

<h2 class="display-4 text-white text-center">Promote to Admin</h2>
<div class="promote-container">
    <div class="text-white p-2">
        <p class="text-center">Are you sure you want to promote @@@Model.UserUsername (@Model.UserFullName)?</p>
        <div class="detailed-information-container">
            <div class="current-email">
                <span><i class="fa-solid fa-envelope"></i> Email:</span>
                <p>@Model.UserEmail</p>
            </div>
            <div class="current-role">
                <span><i class="fa-solid fa-calendar"></i> Date:</span>
                <p>@Model.JoinedDate</p>
            </div>
            <div class="joined-date">
                <span><i class="fa-solid fa-user"></i> Role:</span>
                <p>@(Model.UserRole ?? "User")</p>
            </div>
        </div>
        
        @if (isEligibleForPromote)
        {
            <form asp-area="Admin" asp-controller="User" asp-action="Promote" asp-route-id="@Model.UserId" method="post">
                <input hidden asp-for="@Model.UserEmail" />
                <input id="promote-button" value="Promote" type="submit" class="btn btn-success" />
            </form>
        }
        else
        {
            <p id="message"><i class="fa-solid fa-triangle-exclamation"></i> To make a user an admin, they must not have any posts or liked posts!</p>
        }
    </div>
</div>

<partial name="_ChatPartial" model="@messages" />

@section Styles {
    <link rel="stylesheet" href="~/css/promote.css" />
    <link rel="stylesheet" href="~/css/admin-chat.css" />
}

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/admin-chat.js"></script>
    <script>
        let currentAdminUsername = '@@@currentAdminUsername';

        var connection = new signalR.HubConnectionBuilder().withUrl("/adminChatHub").build();

        document.getElementById("send-button").disabled = true;

        connection.on("ReceiveMessage", function (user, message) {
            var li = document.createElement("li");
            document.getElementById("messages-list").appendChild(li);

            let span = document.createElement('span');
            span.classList.add('new-message');
            span.textContent = '*NEW';

            li.appendChild(span);
            li.innerHTML += `${user}: ${message}`;
        });

        connection.start().then(function () {
            document.getElementById("send-button").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("send-button").addEventListener("click", function (event) {
            var message = document.getElementById("message-input").value;
            if (message.length > 0) {
                document.getElementById("message-input").value = '';
                connection.invoke("SendMessage", currentAdminUsername, message).catch(function (err) {
                    return console.error(err.toString());
                });
                event.preventDefault();
            }
        });
    </script>
}