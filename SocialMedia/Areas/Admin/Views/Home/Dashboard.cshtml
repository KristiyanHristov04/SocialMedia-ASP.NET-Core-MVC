@model StatisticsViewModel
@inject IAdminChatService adminChatService

@{
    ViewData["Title"] = "Dashboard";
    string currentAdminUsername = this.User.GetUsername();
    List<AdminMessageViewModel> messages = await adminChatService.LoadMessagesFromDatabaseAsync();
}

<h2 class="display-4 text-white text-center">Welcome to the dashboard, Admin!</h2>
<div class="row text-white w-75 mx-auto gap-3 mt-5">
    <div class="offset-xl-2 col-xl-4 box-container">
        <i class="fa-solid fa-users"></i>
        <p>Users: @Model.AllTimeUsersCount</p>
        <span>*All users that have used the application.</span>
    </div>
    <div class="col-xl-4 box-container">
        <i class="fa-solid fa-user-gear"></i>
        <p>Admins: @Model.TotalAdminsCount</p>
        <span>*All superadmins/admins in the application.</span>
    </div>
    <div class="offset-xl-2 col-xl-4 box-container">
        <i class="fa-solid fa-ban"></i>
        <p>Removed Posts: @Model.ReportedPostsDeletedCount</p>
        <span>*Deleted posts reported for inappropriate content.</span>
    </div>
    <div class="col-xl-4 box-container">
        <i class="fa-solid fa-chart-simple"></i>
        <p>New Users: @Model.RegisteredUsersLast7DaysCount</p>
        <span>*New users registered in the last seven days.</span>
    </div>
</div>

<partial name="_ChatPartial" model="@messages" />


@section Styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link rel="stylesheet" href="~/css/admin-chat.css" />
}

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/admin-chat.js"></script>
    <script>
        let currentAdminUsername = '@@@currentAdminUsername';

        var connection = new signalR.HubConnectionBuilder().withUrl("/adminChatHub").build();

        document.getElementById("send-button").disabled = true;

        connection.on("ReceiveMessage", function (user, message) {
            var li = document.createElement("li");
            document.getElementById("messages-list").appendChild(li);

            let span = document.createElement('span');
            span.classList.add('new-message');
            span.textContent = '*NEW';

            li.appendChild(span);
            li.innerHTML += `${user}: ${message}`;
        });

        connection.start().then(function () {
            document.getElementById("send-button").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("send-button").addEventListener("click", function (event) {
            var message = document.getElementById("message-input").value;
            if (message.length > 0) {
                document.getElementById("message-input").value = '';
                connection.invoke("SendMessage", currentAdminUsername, message).catch(function (err) {
                    return console.error(err.toString());
                });
                event.preventDefault();
            }
        });
    </script>
}