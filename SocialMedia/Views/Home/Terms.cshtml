@using SocialMedia.Areas.Admin.Services.Interfaces
@using SocialMedia.Areas.Admin.ViewModels.AdminChat
@inject IAdminChatService adminChatService

@{
    ViewData["Title"] = "Terms and Conditions";
    string currentAdminUsername = string.Empty;
    @if(this.User.Identity?.IsAuthenticated ?? false)
    {
        currentAdminUsername = this.User.GetUsername();
    }
    
    List<AdminMessageViewModel> messages = await adminChatService.LoadMessagesFromDatabaseAsync();
}
}

<div class="text-white">
    <h1 class="display-4">@ViewData["Title"]</h1>

    <p>Welcome to SocialMedia, the premier social networking platform designed to connect you with friends, family, and the world. Before you dive into the SocialMedia experience, please carefully review the following terms and conditions. By accessing or using SocialMedia, you agree to be bound by these terms and conditions. If you do not agree with any part of these terms, please refrain from accessing SocialMedia.</p>

    <h3 class="display-6">Account Creation:</h3>

    <ol>
        <li>You agree to provide accurate and truthful information during the registration process.</li>
        <li>It is your responsibility to maintain the confidentiality of your account credentials and to monitor all activities conducted under your account.</li>
    </ol>

    <h3 class="display-6">User Conduct:</h3>

    <ol>
        <li>Users agree not to utilize SocialMedia for any unlawful or prohibited purposes.</li>
        <li>You will not post or share any content that is offensive, defamatory, obscene, or infringes upon the rights of others.</li>
        <li>Activities that disrupt the normal operation of SocialMedia are strictly prohibited.</li>
    </ol>

    <h3 class="display-6">Privacy Policy:</h3>

    <ol>
        <li>Our Privacy Policy governs the collection, use, and disclosure of your personal information on SocialMedia. By using SocialMedia, you consent to the terms outlined in our Privacy Policy.</li>
    </ol>

    <h3 class="display-6">Disclaimer of Warranties:</h3>

    <ol>
        <li>SocialMedia is provided "as is" and "as available" without any warranties of any kind, whether express or implied.</li>
        <li>We do not warrant that SocialMedia will be uninterrupted, error-free, or free from viruses or other harmful components.</li>
    </ol>

    <h3 class="display-6">Changes to Terms:</h3>

    <ol>
        <li>
            SocialMedia reserves the right to modify or update these terms and conditions at any time without prior notice. Your continued use of SocialMedia after any such changes constitutes your acceptance of the revised terms.
        </li>
    </ol>
</div>

@if (this.User.Identity?.IsAuthenticated ?? false && !this.User.IsInRole("User"))
{
    <partial name="~/Areas/Admin/Views/Shared/_ChatPartial.cshtml" model="@messages" />
}

@section Styles {
    @if(!this.User.IsInRole("User"))
    {
        <link rel="stylesheet" href="~/css/admin-chat.css" />
    }
}

@section Scripts {
    @if (!this.User.IsInRole("User"))
    {
        <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
        <script src="~/js/admin-chat.js"></script>
        <script>
            let currentAdminUsername = '@@@currentAdminUsername';

            var connection = new signalR.HubConnectionBuilder().withUrl("/adminChatHub").build();

            document.getElementById("send-button").disabled = true;

            connection.on("ReceiveMessage", function (user, message) {
                var li = document.createElement("li");
                document.getElementById("messages-list").appendChild(li);

                let span = document.createElement('span');
                span.classList.add('new-message');
                span.textContent = '*NEW';

                li.appendChild(span);
                li.innerHTML += `${user}: ${message}`;
            });

            connection.start().then(function () {
                document.getElementById("send-button").disabled = false;
            }).catch(function (err) {
                return console.error(err.toString());
            });

            document.getElementById("send-button").addEventListener("click", function (event) {
                var message = document.getElementById("message-input").value;
                if (message.length > 0) {
                    document.getElementById("message-input").value = '';
                    connection.invoke("SendMessage", currentAdminUsername, message).catch(function (err) {
                        return console.error(err.toString());
                    });
                    event.preventDefault();
                }
            });
        </script>
    }
}

